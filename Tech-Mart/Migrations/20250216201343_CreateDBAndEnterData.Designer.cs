// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tech_Mart.Data;

#nullable disable

namespace Tech_Mart.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250216201343_CreateDBAndEnterData")]
    partial class CreateDBAndEnterData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tech_Mart.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryImg = "mobiles.jpg",
                            Description = "Mobile Products",
                            Name = "Mobiles"
                        },
                        new
                        {
                            Id = 2,
                            CategoryImg = "laptops.jpg",
                            Description = "LabTops Products",
                            Name = "LabTops"
                        },
                        new
                        {
                            Id = 3,
                            CategoryImg = "tablets.jpg",
                            Description = "Tablets Products",
                            Name = "Tablets"
                        });
                });

            modelBuilder.Entity("Tech_Mart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quntity")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Flagship smartphone from Apple",
                            Discount = 0.10000000000000001,
                            Img = "Iphone11.jpg",
                            Name = "Iphone11",
                            Price = 1999.99,
                            Quntity = 10,
                            Rate = 4.5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "High-performance smartphone from Apple",
                            Discount = 0.10000000000000001,
                            Img = "Iphone12.jpg",
                            Name = "Iphone12",
                            Price = 2999.9899999999998,
                            Quntity = 10,
                            Rate = 4.5
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Latest smartphone from Apple",
                            Discount = 0.10000000000000001,
                            Img = "Iphone13.jpg",
                            Name = "Iphone13",
                            Price = 3999.9899999999998,
                            Quntity = 10,
                            Rate = 4.5
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Premium smartphone from Apple",
                            Discount = 0.10000000000000001,
                            Img = "Iphone14.jpg",
                            Name = "Iphone14",
                            Price = 4999.9899999999998,
                            Quntity = 10,
                            Rate = 4.5
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Next-gen smartphone from Apple",
                            Discount = 0.10000000000000001,
                            Img = "Iphone15.jpg",
                            Name = "Iphone15",
                            Price = 5999.9899999999998,
                            Quntity = 10,
                            Rate = 4.5
                        });
                });

            modelBuilder.Entity("Tech_Mart.Models.Product", b =>
                {
                    b.HasOne("Tech_Mart.Models.Category", "Category")
                        .WithMany("products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Tech_Mart.Models.Category", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
